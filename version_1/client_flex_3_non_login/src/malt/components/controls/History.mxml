<?xml version="1.0" encoding="utf-8"?> 
<maltC:MaltContainer xmlns:code="http://code.google.com/p/flexlib/"  creationComplete=" super.run(this);init()"   xmlns:malt="malt.components.controls.*"  xmlns:maltC="malt.core.containers.*" xmlns:mx="http://www.adobe.com/2006/mxml"  >
  
  
 
    <mx:Script>
        <![CDATA[
        	import mx.events.ItemClickEvent;
        	import mx.collections.ArrayCollection;
        	import mx.rpc.events.ResultEvent;
           import malt.components.service.BetsAction;
           import mx.managers.PopUpManager;
           import mx.controls.Alert;
           	import malt.components.classes.CheckData;
           import malt.components.controls.OneBetInfo;
           private var userId:uint;
           private var _service:BetsAction;
           private var _checkData:CheckData;
           	  private var system:String;
               private var win:Number;
               private var winner:Number;
           
           
 var dataMain:ArrayCollection ;
        	 
        	 public function selectData(event:ItemClickEvent):void
        	 { 
        	 	hisStack.selectedIndex=event.index;
        	  }
        	 
        	 
     		public function  init( ):void
     		{ 
     		    _checkData= CheckData.getInstance(); 
     		   _service=new BetsAction();
     		    userId=1; 
     		    // sets the invoice date to today's date
				var invoiceDate:Date = new Date();
				var millisecondsPerDay:int = 1000 * 60 * 60 * 24;
				// adds 30 days to get the due date
				var dueDate:Date = new Date(invoiceDate.getTime() - (1 * millisecondsPerDay));
		        first.dateField.selectedDate= dueDate;
		        
		        var invoiceDate:Date = new Date();
				var millisecondsPerDay:int = 1000 * 60 * 60 * 24;
				// adds 30 days to get the due date
				var dueDate:Date = new Date(invoiceDate.getTime() + (1 * millisecondsPerDay));
		        second.dateField.selectedDate= dueDate
            }
     		
      
			public function load():void
			{
		 	       if(second.dateField.selectedDate <   first.dateField.selectedDate )
		 	  		{
		 	  			var text:String="'From' date cant be higher or equal to 'To' date."
		 	  			Alert.show(text)
		 	  			return  void;
		 	  		}  
		 	  		else  if(second.dateField.selectedDate >   first.dateField.selectedDate )
		 	  		{
		 	  			
		 	  		}
		 	  		else
		 	  		{ 
				 	  		 if(second.hours <   first.hours)
				 	  		{
				 	  			var text:String="Please check 'To' date hours."
				 	  			Alert.show(text)
				 	  			return  void;
				 	  		} 
				 	  		else  if(second.hours ==  first.hours)
				 	  		{
				 	  			 if(second.min <=  first.min)
				 	  			 {
				 	  			 	var text:String="Please check 'To' date min."
				 	  				Alert.show(text)
				 	  				return  void;
				 	  			 }
				 	  		}
				 	  			
		 	  		}
		 	
		 	
		 	
		 		 _service.userEditId=userId ;
		        
		         _service.datefirst=first.formatedTime;
		         _service.datesecond= second.formatedTime;
		         
		         _service.statusOfBet=String(test.selectedValue);
		         _service.callSelectUserPlacedBets(resultData) ;
	 	         
			}
			
			public function resultData(event:ResultEvent)
			{
	    	  if(_checkData.validation(event.result)) 
	    	 {
				var jok:Array=event.result as Array 
				if (jok.lenght==0)
				{ 
					mainDG.dataProvider=new ArrayCollection();
				}
				else
				{
					 dataMain =new ArrayCollection();
					var first:Array  = jok[0] as Array  ;
					var second:Array= jok[1] as Array ; 
				 
			 
				  
						for(var i:uint=0;i<first.length;i++)
					    {	
					        var groupsAC=new ArrayCollection();
					        for(var ie:uint=0;ie<second.length;ie++)
					   		{
					   			if(second[ie][0]==first[i][0])
					   			{   
					   	        	groupsAC.addItem({"ticketId":second[ie][0], "name":second[ie][1],  "cor":second[ie][2], "odd":second[ie][3]});
					   			 
					   			}
					   	 	}
					   	     dataMain.addItem({"ticketId":first[i][0], "created":first[i][1], "fundswin":first[i][2], "fundsout":first[i][3], "system":first[i][4],"children":groupsAC}); 
					     } 
						   
					 	mainDG.dataProvider=dataMain;
					   event.currentTarget.removeEventListener("result",resultData);
				}
			}
			}
			
			public function loadDetails(event):void
			{
		 
				   system= event.currentTarget.selectedItem.system 
			       win= event.currentTarget.selectedItem.fundsout
			       winner= event.currentTarget.selectedItem.fundswin 
				  _service.ticketId=event.currentTarget.selectedItem.ticketId
				   _service.callSelectBetInfo(resultOneBet) 
			}
			
			public function resultOneBet(event:ResultEvent):void
			{
					  if(_checkData.validation(event.result)) 
			    	 {
			    	 	  var login:OneBetInfo=OneBetInfo(PopUpManager.createPopUp( this, OneBetInfo , true));
		                   login.width=this.width-100;
               				login.height= this.height-100; 
		                 login.dataAC(event.result as Array, system,win,winner);  
			    	 }
			    	 else
			    	 {
			    	 	Alert.show("Problems on server, please try later.")
			    	 } 
	    	   	  	    event.currentTarget.removeEventListener("result",resultOneBet);
			}
			
			
			
			
        ]]>
    </mx:Script>
    <mx:VBox width="100%" horizontalAlign="center">
				  <mx:ToggleButtonBar itemClick="selectData(event)">
				  	<mx:String>Bets</mx:String>
				  	<mx:String>Money</mx:String>
				  </mx:ToggleButtonBar> 
				  
    	
    </mx:VBox>
				  
  <mx:ViewStack id="hisStack" width="100%" height="100%">
     <mx:Canvas width="100%" height="100%">
			     <mx:VBox width="100%"  height="100%" horizontalAlign="center">
				  
				   <mx:RadioButtonGroup id="test" />
				   
				   <mx:HBox>
				   		<mx:RadioButton selected="true" id="active" value="true" groupName="test" label="Active bets" />
				   		<mx:RadioButton groupName="test" id="arhive" value="false" label="Finished bets" /> 
				    </mx:HBox>
				    <mx:HBox>
				 
				   <mx:Label text="From:" /><malt:DateTimer   id="first" />
				    <mx:Label text="To:" /><malt:DateTimer   id="second" />
				   </mx:HBox>
				   <mx:Button label="Load" click="load()" />
				   <mx:DataGrid id="mainDG"  itemClick="loadDetails(event)" width="100%" height="100%" variableRowHeight="true" wordWrap="true" >
				   	<mx:columns> 
						<mx:DataGridColumn headerText="Bet / Your selection / Odds (click for details) "   dataField="name" >
				   			<mx:itemRenderer>
				   				<mx:Component>
				   				<mx:VBox height="100%" width="100%">
				   				
				   				<mx:Script>
				   					<![CDATA[
				   						   
				   						   public function loadData(data)
				   						   {
				   						   		var string:String="";
				   						   		
				   						   		for(var ie:uint=0;ie<data.length;ie++)
										   		{
										   	 		string=string+data.getItemAt(ie)['name']+" | "+data.getItemAt(ie)['cor']+" | "+data.getItemAt(ie)['odd']+" | "+"<br/>" ;
										   	 	}
				   						   		
				   						   		
				   						   	  return string;
				   						   }
				   						   
				   						 //   "ticketId":second[ie][0], "name":second[ie][1],  "":second[ie][2], "":second[ie][3] 
				   					]]>
				   				</mx:Script>
				   				 <mx:Text color="black" width="100%" htmlText="{loadData(data.children)}"   /> 
				   			   </mx:VBox>
				   				</mx:Component>
				   				
				   			</mx:itemRenderer>
				   		</mx:DataGridColumn> 
				   		<!--		<mx:DataGridColumn   width="50" headerText="System" dataField="system" /> -->
				   		<mx:DataGridColumn width="150" headerText="Date" dataField="created" />
				   		<mx:DataGridColumn width="80" headerText="Win"  dataField="fundswin"  />
				   		<mx:DataGridColumn width="80" headerText="Stake" dataField="fundsout"  />
				   		
				   	</mx:columns>
				   </mx:DataGrid>
			  </mx:VBox>
    </mx:Canvas>
 	 
   
 
    <mx:Script>
        <![CDATA[
         
            import malt.components.service.PlayersAction;
    
           
    
            private var _serviceBank:PlayersAction;
        	 
     		public function  loadBankData(  ):void
     		{ 
     		   _serviceBank=new PlayersAction(); 
     		    // sets the invoice date to today's date
				var invoiceDate:Date = new Date();
				var millisecondsPerDay:int = 1000 * 60 * 60 * 24;
				// adds 30 days to get the due date
				var dueDate:Date = new Date(invoiceDate.getTime() - (1 * millisecondsPerDay));
		        firstBank.dateField.selectedDate= dueDate;
		        
		        var invoiceDate:Date = new Date();
				var millisecondsPerDay:int = 1000 * 60 * 60 * 24;
				// adds 30 days to get the due date
				var dueDate:Date = new Date(invoiceDate.getTime() + (1 * millisecondsPerDay));
		        secondBank.dateField.selectedDate= dueDate
		        
 
		        _serviceBank.callFunds( addFunds)
		            
	        }
	        
	        public function addFunds(event:ResultEvent):void
	        {
	           if(_checkData.validation(event.result)) 
	    	   {
	        	   bal.text=String(event.result);
	               event.currentTarget.removeEventListener("result",addFunds);
	            }
	        }
     		
   
			
			public function loadBank():void
			{
		 	       if(secondBank.dateField.selectedDate <   firstBank.dateField.selectedDate )
		 	  		{
		 	  			var text:String="'From' date cant be higher or equal to 'To' date."
		 	  			Alert.show(text)
		 	  			return  void;
		 	  		}  
		 	  		else  if(secondBank.dateField.selectedDate >   firstBank.dateField.selectedDate )
		 	  		{
		 	  			
		 	  		}
		 	  		else
		 	  		{ 
				 	  		 if(secondBank.hours <   firstBank.hours)
				 	  		{
				 	  			var text:String="Please check active date hours."
				 	  			Alert.show(text)
				 	  			return  void;
				 	  		} 
				 	  		else  if(secondBank.hours ==  firstBank.hours)
				 	  		{
				 	  			 if(second.min <=  first.min)
				 	  			 {
				 	  			 	var text:String="Please check active date min."
				 	  				Alert.show(text)
				 	  				return  void;
				 	  			 }
				 	  		}
				 	  			
		 	  		}
		 	
		 	
		 	
 
		         _serviceBank.datefirst=firstBank.formatedTime;
		         _serviceBank.datesecond= secondBank.formatedTime;
		         _serviceBank.statusOfBet=String(testBank.selectedValue);
		         _serviceBank.callTransactions(resultDataBank) ;
	 	         
			}
			
			public function resultDataBank(event:ResultEvent):void
			{ 
		  		mainDGBank.dataProvider=new ArrayCollection(event.result as Array);
		  	    event.currentTarget.removeEventListener("result",resultDataBank);
		 	}
		 	
		  
        ]]>
    </mx:Script>
	<mx:Canvas width="100%" height="100%" creationComplete="loadBankData()">
		   
		   
		     <mx:VBox width="100%"  height="100%" horizontalAlign="center">
 
			  
			   <mx:RadioButtonGroup id="testBank" />
			   
			   <mx:HBox>
		            <mx:RadioButton selected="true" id="activeBank" value="true" groupName="testBank" label="Payouts" />
			   		<mx:RadioButton groupName="testBank" id="arhiveBank" value="false" label="On bet" /> 
			    </mx:HBox>
			     <mx:HBox>
			     	<mx:Label text="Balance:" /><mx:Label  id="bal" /><mx:Button click="loadBankData()" label="Check balance" />
			      </mx:HBox>
			    <mx:HBox>
			 
			   <mx:Label text="From:" /><malt:DateTimer   id="firstBank" />
			    <mx:Label text="To:" /><malt:DateTimer   id="secondBank" />
			   </mx:HBox>
			   <mx:Button label="Load" click="loadBank()" />
			    <mx:DataGrid id="mainDGBank"  width="100%" height="100%" variableRowHeight="true" wordWrap="true" >
			   	<mx:columns> 
			   		<mx:DataGridColumn headerText="Money" dataField="funds" />
			   		  <mx:DataGridColumn headerText="Added by"   >
			   		   <mx:itemRenderer>
			   		   	<mx:Component>
			   		   	<mx:VBox>
			   		   		
			   		   		<mx:Script>
			   		   			<![CDATA[
			   		   				private function t(data:String):String
			   		   				{
			   		   					 
			   		   					if(data==null)
			   		   					{
			   		   						return "Admin";
			   		   					}
			   		   					else
			   		   					{
			   		   						return "Bet";
			   		   					}
			   		   				}
			   		   			]]>
			   		   		</mx:Script>
			   		   		
			   		   		<mx:Label color="black"   text="{t(data.ticket)}" />
			   		   	</mx:VBox>
			   		   	</mx:Component>
			   		   </mx:itemRenderer>
			   		  </mx:DataGridColumn>
			   		<mx:DataGridColumn headerText="Date" dataField="date" /> 
			   		
			   	</mx:columns>
			   </mx:DataGrid>
		  </mx:VBox>
 	  
	</mx:Canvas>
	
	
 

  	
  </mx:ViewStack>
  
   
  
  
  
  
</maltC:MaltContainer>
